{"ast":null,"code":"var _jsxFileName = \"/home/cielo/Documentos/Burger-Queen/LIM011-fe-burger-queen/src/components/waiterView.jsx\";\nimport React, { useState } from 'react';\nimport Menu from './menu';\nimport Order from './order';\n\nfunction WaiterView() {\n  const [arrOrder, setArrOrder] = useState([]);\n  const [arrtotal, setArrTotal] = useState(0);\n\n  const buttonTotal = () => {\n    let total = 0;\n    arrOrder.forEach(element => {\n      const price = element.precio;\n      const quantity = element.cantidad;\n      total += price * quantity;\n      setArrTotal(total);\n    });\n    return total;\n  };\n\n  const orderReset = () => {\n    setArrOrder([]);\n  };\n\n  function Delete(data) {\n    const newArrayDel = [...arrOrder];\n    const position = arrOrder.findIndex(element => element.id === data.id);\n    console.log(position);\n    const arrayProducts = newArrayDel.splice(position, 1);\n    console.log(arrayProducts);\n    setArrOrder(newArrayDel);\n  }\n\n  const agregarProductoAlPedido = (obj, operacion) => {\n    const newobj = {\n      producto: obj.descripcion,\n      precio: obj.precio,\n      id: obj.id,\n      cantidad: 1\n    };\n    const filterProducts = arrOrder.filter(element => element.id === newobj.id);\n    const newArray = arrOrder.concat([newobj]);\n    const mapProducts = arrOrder.map(element => {\n      const elementCantidad = element;\n\n      if (element.id === newobj.id) {\n        if (element.cantidad >= 1) {\n          if (operacion === false) {\n            elementCantidad.cantidad -= 1;\n          }\n        }\n\n        if (operacion === true) {\n          elementCantidad.cantidad += 1;\n        }\n      }\n\n      return elementCantidad;\n    });\n\n    if (filterProducts.length === 0) {\n      setArrOrder(newArray);\n    } else {\n      setArrOrder(mapProducts);\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"d-flex bd-highlight\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"p-2 flex-fill bd-highlight\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Menu, {\n    agregar: agregarProductoAlPedido,\n    total: buttonTotal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"p-2 flex-fill bd-highlight\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Order, {\n    data: arrOrder,\n    addOperation: agregarProductoAlPedido,\n    total: buttonTotal,\n    eliminar: Delete,\n    newtotal: arrtotal,\n    reset: orderReset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  })));\n}\n\nexport default WaiterView;","map":{"version":3,"sources":["/home/cielo/Documentos/Burger-Queen/LIM011-fe-burger-queen/src/components/waiterView.jsx"],"names":["React","useState","Menu","Order","WaiterView","arrOrder","setArrOrder","arrtotal","setArrTotal","buttonTotal","total","forEach","element","price","precio","quantity","cantidad","orderReset","Delete","data","newArrayDel","position","findIndex","id","console","log","arrayProducts","splice","agregarProductoAlPedido","obj","operacion","newobj","producto","descripcion","filterProducts","filter","newArray","concat","mapProducts","map","elementCantidad","length"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Menu from './menu';\nimport Order from './order';\n\nfunction WaiterView() {\n  const [arrOrder, setArrOrder] = useState([]);\n  const [arrtotal, setArrTotal] = useState(0);\n\n  const buttonTotal = () => {\n    let total = 0;\n    arrOrder.forEach((element) => {\n      const price = element.precio;\n      const quantity = element.cantidad;\n      total += (price * quantity);\n      setArrTotal(total);\n    });\n    return (total);\n  };\n  const orderReset = () => {\n    setArrOrder([]);\n  };\n\n  function Delete(data) {\n    const newArrayDel = [...arrOrder];\n    const position = arrOrder.findIndex((element) => element.id === data.id);\n    console.log(position);\n    const arrayProducts = newArrayDel.splice(position, 1);\n    console.log(arrayProducts);\n    setArrOrder(newArrayDel);\n  }\n\n  const agregarProductoAlPedido = (obj, operacion) => {\n    const newobj = {\n      producto: obj.descripcion,\n      precio: obj.precio,\n      id: obj.id,\n      cantidad: 1,\n    };\n    const filterProducts = arrOrder.filter((element) => element.id === newobj.id);\n    const newArray = arrOrder.concat([newobj]);\n    const mapProducts = arrOrder.map((element) => {\n      const elementCantidad = element;\n      if (element.id === newobj.id) {\n        if (element.cantidad >= 1) {\n          if (operacion === false) {\n            elementCantidad.cantidad -= 1;\n          }\n        }\n        if (operacion === true) {\n          elementCantidad.cantidad += 1;\n        }\n      }\n      return elementCantidad;\n    });\n    if (filterProducts.length === 0) {\n      setArrOrder(newArray);\n    } else {\n      setArrOrder(mapProducts);\n    }\n  };\n  return (\n    <div className=\"d-flex bd-highlight\">\n      <div className=\"p-2 flex-fill bd-highlight\">\n        <Menu agregar={agregarProductoAlPedido} total={buttonTotal} />\n      </div>\n      <div className=\"p-2 flex-fill bd-highlight\">\n        <Order data={arrOrder} addOperation={agregarProductoAlPedido} total={buttonTotal} eliminar={Delete} newtotal={arrtotal} reset={orderReset} />\n      </div>\n    </div>\n  );\n}\n\nexport default WaiterView;\n"]},"metadata":{},"sourceType":"module"}